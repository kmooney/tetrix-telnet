[x] start a tetrix game on request
[x] accept user input a byte at a time (input thread? how would that work?)
[x] poll tetrix gamewrapper for events
[x] interpret events and send to telnet buffer.
[x] interactive help so they know how to, like, "start" the game.
[x] real-deal logging
[x] improve overall display - ANSI colors, score, lines
[x] lib -> fix bug that prevents shapes from moving to right edge.
[x] shape position update from library
[x] re-do shape rendering
[x] shape update on rotation
[x] why is there an awkard pause after a drop - it's because the 
    drop ends at y = 1, not y = 0
[x] shape update after drop
[x] shape update on lock?? (same as drop??)
[x] use the colors from the ShapeRep
[x] fix the background color
[x] erase lines when completed!
   [x] store colors in board data - use u8 instead of bits
   [x] when a line is completed send new board data for a board redraw
   [x] redraw the board, if it exists.
   [x] only send the line completion when the line status changes.
   [x] send board info along w/ line completion
[ ] there's a line clear bug - try and undersstand what's happening.
[ ] add line count
[ ] add level adjustment
[ ] add next shape display
[ ] add hold control
[ ] add reserved shape display

[ ] infinite loop on Eye kick. what gives??
[ ] add background colors to shaperep

--- extras ---
[ ] map drop to spacebar, down to 'k'
[ ] it sure would be cool to watch other games....
[ ] it sure would be cool to get a game list...
[ ] telnet negotiate width and store per client. crop or pad ansi graphic from 80 characters
[ ] redraw on client IAC SB NAWS w/ padding

